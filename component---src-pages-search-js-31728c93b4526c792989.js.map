{"version":3,"file":"component---src-pages-search-js-31728c93b4526c792989.js","mappings":"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","sources":["webpack://michellemtchai.github.io/./src/components/Pagination.module.scss","webpack://michellemtchai.github.io/./src/components/Pagination.js","webpack://michellemtchai.github.io/./src/components/Projects.js","webpack://michellemtchai.github.io/./src/components/Projects.module.scss","webpack://michellemtchai.github.io/./src/components/FilterSelect.js","webpack://michellemtchai.github.io/./src/components/FilterSelect.module.scss","webpack://michellemtchai.github.io/./src/components/FilterCheckList.module.scss","webpack://michellemtchai.github.io/./src/components/FilterCheckList.js","webpack://michellemtchai.github.io/./src/components/FilterDialog.js","webpack://michellemtchai.github.io/./src/components/FilterDialog.module.scss","webpack://michellemtchai.github.io/./src/components/FilterButton.js","webpack://michellemtchai.github.io/./src/components/FilterButton.module.scss","webpack://michellemtchai.github.io/./src/components/PaginateProjects.js","webpack://michellemtchai.github.io/./src/components/PaginateProjects.module.scss","webpack://michellemtchai.github.io/./src/components/Results.js","webpack://michellemtchai.github.io/./src/components/SearchResults.js","webpack://michellemtchai.github.io/./src/pages/search.js","webpack://michellemtchai.github.io/./src/shared/filter.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var left = \"Pagination-module--left--qnYw7\";\nexport var pagination = \"Pagination-module--pagination--hhon4\";\nexport var right = \"Pagination-module--right--MNn7-\";","import React from 'react';\nimport { navigate } from 'gatsby';\nimport * as styles from './Pagination.module.scss';\n\nconst Pagination = ({ page, totalPages, baseUrl, className }) => {\n\tconst goToPage = (increment) => () => {\n\t\tconst newPage = page + increment;\n\t\tif (newPage > 0 && newPage <= totalPages) {\n\t\t\tnavigate(`${baseUrl}/page/${newPage}`);\n\t\t}\n\t};\n\tconst styling = className\n\t\t? `${className} ${styles.pagination}`\n\t\t: styles.pagination;\n\treturn (\n\t\t<div className={styling}>\n\t\t\t<button\n\t\t\t\tclassName={styles.left}\n\t\t\t\tdisabled={page - 1 <= 0}\n\t\t\t\tonClick={goToPage(-1)}\n\t\t\t>\n\t\t\t\tPrev\n\t\t\t</button>\n\t\t\t<p>Page {page}</p>\n\t\t\t<button\n\t\t\t\tclassName={styles.right}\n\t\t\t\tdisabled={page + 1 > totalPages}\n\t\t\t\tonClick={goToPage(+1)}\n\t\t\t>\n\t\t\t\tNext\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default Pagination;\n","import React from 'react';\nimport Technologies from './Technologies';\nimport { Link } from 'gatsby';\nimport PreviewImage from './PreviewImage';\nimport * as styles from './Projects.module.scss';\n\nconst Projects = ({ list }) => {\n    return (\n        <div className={styles.projects}>\n            {list.length > 0 ? (\n                list.map((project) => (\n                    <section key={project.contentful_id}>\n                        <Link\n                            to={`/projects/${project.slug}`}\n                            alt={project.name}\n                        >\n                            <PreviewImage\n                                className={styles.previewImage}\n                                src={project.previewImage}\n                                alt={project.name}\n                                demo={project.demoUrl}\n                            />\n                            <ul>\n                                <li>\n                                    <h3>{project.name}</h3>\n                                </li>\n                                <li>\n                                    <p>{project.summary}</p>\n                                </li>\n                                <li>\n                                    <Technologies list={project.technologies} />\n                                </li>\n                            </ul>\n                        </Link>\n                    </section>\n                ))\n            ) : (\n                <p className={styles.noProject}>No project found.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Projects;\n","// extracted by mini-css-extract-plugin\nexport var noProject = \"Projects-module--noProject--m7r4Y\";\nexport var previewImage = \"Projects-module--previewImage--4jw0L\";\nexport var projects = \"Projects-module--projects--ILJ+L\";","import React, { useState } from 'react';\nimport * as styles from './FilterSelect.module.scss';\n\nconst FilterSelect = ({ label, value, options, update }) => {\n    const [selected, updateSelected] = useState(value);\n    const onChange = (event) => {\n        const newSelected = event.target.value;\n        updateSelected(newSelected);\n        update(newSelected);\n    };\n    return (\n        <fieldset className={styles.fieldset}>\n            <label>{label}:</label>\n            <select value={selected} onChange={onChange}>\n                {options.map((option) => (\n                    <option key={option.value} value={option.value}>\n                        {option.label}\n                    </option>\n                ))}\n            </select>\n        </fieldset>\n    );\n};\n\nexport default FilterSelect;\n","// extracted by mini-css-extract-plugin\nexport var fieldset = \"FilterSelect-module--fieldset--V0f4A\";","// extracted by mini-css-extract-plugin\nexport var body = \"FilterCheckList-module--body--tr45F\";\nexport var checked = \"FilterCheckList-module--checked--ioaeT\";\nexport var fieldset = \"FilterCheckList-module--fieldset--vgvOy\";\nexport var heading = \"FilterCheckList-module--heading--gNUO-\";","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport * as styles from './FilterCheckList.module.scss';\nlibrary.add(fas, far);\n\nconst FilterCheckList = ({\n    label,\n    value,\n    options,\n    update,\n    initialized,\n    updateInitialized,\n}) => {\n    const hasSelectedAll = (selected) => {\n        return selected.length === options.length;\n    };\n    const [selectAll, updateSelectAll] = useState(\n        initialized ? hasSelectedAll(value) : true\n    );\n    const selectValues = (selectAll) => {\n        let selected = [];\n        if (selectAll) {\n            options.forEach((option) => {\n                selected.push(option.value);\n            });\n        }\n        return selected;\n    };\n    const [selected, updateSelected] = useState(\n        initialized ? value : selectValues(true)\n    );\n    useEffect(() => {\n        if (!initialized) {\n            updateInitialized(true);\n            update(selectValues(true), true);\n        }\n    }, []);\n    const onSelectAll = () => {\n        const newValue = !selectAll;\n        updateSelectAll(newValue);\n        const selectedStacks = selectValues(newValue);\n        updateSelected(selectedStacks);\n        update(selectedStacks);\n    };\n    const onChange = (event) => {\n        const target = event.target.value;\n        let newSelected = [...selected];\n        if (newSelected.includes(target)) {\n            const index = newSelected.indexOf(target);\n            newSelected.splice(index, 1);\n        } else {\n            newSelected.push(target);\n        }\n        updateSelected(newSelected);\n        update(newSelected);\n        updateSelectAll(hasSelectedAll(newSelected));\n    };\n    const CheckBox = ({ checked }) => {\n        const icon = checked ? ['fas', 'check-square'] : ['far', 'square'];\n        return <FontAwesomeIcon icon={icon} />;\n    };\n    return (\n        <fieldset className={styles.fieldset}>\n            <section className={styles.heading}>\n                <label>{label}:</label>\n                {options.length > 0 && (\n                    <label\n                        htmlFor=\"check-all\"\n                        className={selectAll ? styles.checked : undefined}\n                    >\n                        <input\n                            type=\"checkbox\"\n                            id=\"check-all\"\n                            name=\"check-all\"\n                            value=\"all\"\n                            checked={selectAll}\n                            onChange={onSelectAll}\n                        />\n                        <CheckBox checked={selectAll} />\n                        All\n                    </label>\n                )}\n            </section>\n            <section className={styles.body}>\n                {options.length > 0 ? (\n                    options.map((option) => (\n                        <label\n                            key={option.value}\n                            htmlFor={option.value}\n                            className={\n                                selected.includes(option.value)\n                                    ? styles.checked\n                                    : undefined\n                            }\n                        >\n                            <input\n                                type=\"checkbox\"\n                                id={option.value}\n                                name={option.value}\n                                value={option.value}\n                                checked={selected.includes(option.value)}\n                                onChange={onChange}\n                            />\n                            <CheckBox\n                                checked={selected.includes(option.value)}\n                            />\n                            {option.label}\n                        </label>\n                    ))\n                ) : (\n                    <p>There are no options.</p>\n                )}\n            </section>\n        </fieldset>\n    );\n};\n\nexport default FilterCheckList;\n","import React, { useState } from 'react';\nimport FilterSelect from './FilterSelect';\nimport FilterCheckList from './FilterCheckList';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as styles from './FilterDialog.module.scss';\nimport { navigate } from 'gatsby';\n\nconst FilterDialog = ({ query, category, closeModal, filters, search }) => {\n    const [sortBy, updateSortBy] = useState(filters.sortBy.value);\n    const [sortDir, updateSortDir] = useState(filters.sortDir.value);\n    const [stacks, updateStacks] = useState(filters.stacks.value);\n    const updateStacksGlobal = (stacks, updateGlobal = false) => {\n        updateStacks(stacks);\n        if (updateGlobal) {\n            filters.stacks.update(stacks);\n        }\n    };\n    const sortByFilter = {\n        ...filters.sortBy,\n        value: sortBy,\n        update: updateSortBy,\n    };\n    const sortDirFilter = {\n        ...filters.sortDir,\n        value: sortDir,\n        update: updateSortDir,\n    };\n    const stackFilter = {\n        ...filters.stacks,\n        value: stacks,\n        update: updateStacksGlobal,\n    };\n    const onSubmit = () => {\n        filters.sortBy.update(sortBy);\n        filters.sortDir.update(sortDir);\n        filters.stacks.update(stacks);\n        closeModal();\n        navigate(search ? `/search/${category}/${query}` : `/${category}`);\n    };\n    return (\n        <dialog open className={styles.dialog}>\n            <section className={styles.header}>\n                <h1>\n                    <FontAwesomeIcon icon={['fa', 'sliders-h']} />\n                    Filter Dialog\n                </h1>\n                <button onClick={closeModal}>&times;</button>\n            </section>\n            <section className={styles.body}>\n                <FilterSelect label=\"Sort By\" {...sortByFilter} />\n                <FilterSelect label=\"Sort Direction\" {...sortDirFilter} />\n                <FilterCheckList label=\"Stacks\" {...stackFilter} />\n            </section>\n            <section className={styles.footer}>\n                <button className={styles.cancel} onClick={closeModal}>\n                    Cancel\n                </button>\n                <button className={styles.submit} onClick={onSubmit}>\n                    Filter\n                </button>\n            </section>\n        </dialog>\n    );\n};\n\nexport default FilterDialog;\n","// extracted by mini-css-extract-plugin\nexport var body = \"FilterDialog-module--body--Aq9M+\";\nexport var cancel = \"FilterDialog-module--cancel--AiJ8-\";\nexport var dialog = \"FilterDialog-module--dialog--WXN6R\";\nexport var footer = \"FilterDialog-module--footer--GyEni\";\nexport var header = \"FilterDialog-module--header--o1k0g\";\nexport var submit = \"FilterDialog-module--submit--hVclf\";","import React, { useState } from 'react';\nimport Modal from './Modal';\nimport FilterDialog from './FilterDialog';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as styles from './FilterButton.module.scss';\n\nconst FilterButton = ({ category, query, filters, search }) => {\n    const [show, updateShow] = useState(false);\n    const openDialog = () => {\n        updateShow(true);\n    };\n    return (\n        <>\n            <button className={styles.filterButton} onClick={openDialog}>\n                <FontAwesomeIcon icon={['fa', 'sliders-h']} />\n                Filter\n            </button>\n            <Modal show={show} updateShow={updateShow}>\n                <FilterDialog\n                    query={query}\n                    category={category}\n                    closeModal={() => updateShow(false)}\n                    filters={filters}\n                    search={search}\n                />\n            </Modal>\n        </>\n    );\n};\n\nexport default FilterButton;\n","// extracted by mini-css-extract-plugin\nexport var filterButton = \"FilterButton-module--filterButton--dW-ud\";","import React, { useEffect, useContext } from 'react';\nimport SearchBar from './SearchBar';\nimport Pagination from './Pagination';\nimport Projects from './Projects';\nimport FilterButton from './FilterButton';\nimport NotFound from '../pages/404';\nimport { GlobalContext } from '../../GlobalContext.js';\nimport * as styles from './PaginateProjects.module.scss';\n\nconst ITEMS_PER_PAGE = 10;\n\nconst PaginateProjects = ({\n\tresults,\n\tfilters,\n\tbaseUrl,\n\tquery,\n\tpage,\n\theading,\n\ttitle,\n\tdescription,\n\tcategory,\n}) => {\n\tlet availablePages = Math.ceil(results.length / ITEMS_PER_PAGE);\n\tavailablePages = availablePages === 0 ? 1 : availablePages;\n\tconst currPageItems = () => {\n\t\tconst startIndex = (page - 1) * ITEMS_PER_PAGE;\n\t\treturn results.slice(startIndex, startIndex + ITEMS_PER_PAGE);\n\t};\n\tconst items = currPageItems();\n\tconst Paginate = ({ className }) =>\n\t\tavailablePages > 1 && (\n\t\t\t<Pagination\n\t\t\t\tpage={page}\n\t\t\t\ttotalPages={availablePages}\n\t\t\t\tbaseUrl={baseUrl}\n\t\t\t\tclassName={className}\n\t\t\t/>\n\t\t);\n\tconst { setTitle, setDescription, setSelectedCategory } =\n\t\tuseContext(GlobalContext);\n\tuseEffect(() => {\n\t\tsetTitle(title);\n\t\tsetDescription(description);\n\t\tsetSelectedCategory(category);\n\t}, []);\n\treturn page > 0 && page <= availablePages ? (\n\t\t<>\n\t\t\t<SearchBar range={category === '' ? 'all' : category} />\n\t\t\t<h2 className={styles.heading}>{heading}</h2>\n\t\t\t<section className={styles.topInfo}>\n\t\t\t\t<FilterButton\n\t\t\t\t\tquery={query}\n\t\t\t\t\tcategory={category === '' ? 'all' : category}\n\t\t\t\t\tfilters={filters}\n\t\t\t\t\tsearch={heading === 'Search'}\n\t\t\t\t/>\n\t\t\t\t<p className={styles.summary}>\n\t\t\t\t\t{availablePages > 1 && `${items.length} of `}\n\t\t\t\t\t{results.length} Project{items.length > 1 && 's'}\n\t\t\t\t\t{query && ` for \"${query}\"`}\n\t\t\t\t</p>\n\t\t\t\t<Paginate className={styles.paginate} />\n\t\t\t</section>\n\t\t\t<Projects list={items} />\n\t\t\t<Paginate className={styles.bottomPagination} />\n\t\t</>\n\t) : (\n\t\t<NotFound />\n\t);\n};\n\nexport default PaginateProjects;\n","// extracted by mini-css-extract-plugin\nexport var bottomPagination = \"PaginateProjects-module--bottomPagination--xBTna\";\nexport var heading = \"PaginateProjects-module--heading--+5xTW\";\nexport var paginate = \"PaginateProjects-module--paginate--2hhVh\";\nexport var summary = \"PaginateProjects-module--summary--j9DR-\";\nexport var topInfo = \"PaginateProjects-module--topInfo--ckQdh\";","import React from 'react';\nimport NotFound from '../pages/404';\n\nconst Results = ({ params, Component }) => {\n\tif (params) {\n\t\tconst result = params.match(/^page\\/(\\d+)$/);\n\t\tif (result && result.length === 2) {\n\t\t\tconst page = parseInt(result[1]);\n\t\t\treturn <Component page={page} />;\n\t\t} else {\n\t\t\treturn <NotFound />;\n\t\t}\n\t} else {\n\t\treturn <Component page={1} />;\n\t}\n};\n\nexport default Results;\n","import React, { useEffect, useContext } from 'react';\nimport PaginateProjects from './PaginateProjects';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport {\n\tfilterByStacks,\n\tgetStacks,\n\tsortDirOptions,\n\tsortProjects,\n} from '../shared/filter';\nimport { GlobalContext } from '../../GlobalContext.js';\nimport { rehype } from 'rehype';\nimport rehypeSanitize, { defaultSchema } from 'rehype-sanitize';\nimport rehypeReact from 'rehype-react';\n\nconst SearchResults = ({ category, query, page }) => {\n\tconst {\n\t\tsearchFiltersTerm,\n\t\tsetSearchFiltersTerm,\n\t\tsearchFiltersRange,\n\t\tsetSearchFiltersRange,\n\t\tsearchFiltersSortBy,\n\t\tsetSearchFiltersSortBy,\n\t\tsearchFiltersSortDir,\n\t\tsetSearchFiltersSortDir,\n\t\tsearchFiltersStacks,\n\t\tsetSearchFiltersStacks,\n\t\tsearchFiltersStackOptions,\n\t\tsetSearchFiltersStackOptions,\n\t} = useContext(GlobalContext);\n\tconst { allContentfulProject } = useStaticQuery(\n\t\tgraphql`\n\t\t\tquery {\n\t\t\t\tallContentfulProject {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\tcontentful_id\n\t\t\t\t\t\tslug\n\t\t\t\t\t\tname\n\t\t\t\t\t\tsummary\n\t\t\t\t\t\tdemoUrl\n\t\t\t\t\t\tpreviewImage {\n\t\t\t\t\t\t\tgatsbyImageData(\n\t\t\t\t\t\t\t\twidth: 320\n\t\t\t\t\t\t\t\tplaceholder: BLURRED\n\t\t\t\t\t\t\t\tformats: [AUTO, WEBP]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttechnologies {\n\t\t\t\t\t\t\tcontentful_id\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\ticon {\n\t\t\t\t\t\t\t\tgatsbyImageData(\n\t\t\t\t\t\t\t\t\twidth: 12\n\t\t\t\t\t\t\t\t\tplaceholder: BLURRED\n\t\t\t\t\t\t\t\t\tformats: [AUTO, WEBP]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcategory {\n\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`\n\t);\n\tconst boldQuery = (str) => {\n\t\tconst terms = query.split(/\\s+/g);\n\t\tconst regex = new RegExp(`(${terms.join('|')})`, 'gi');\n\t\tconst replacer = (x) => `<b>${x}</b>`;\n\t\tconst replaced = str.replace(regex, replacer);\n\t\tconst processed = rehype()\n\t\t\t.data('settings', { fragment: true })\n\t\t\t.use(rehypeSanitize, defaultSchema)\n\t\t\t.use(rehypeReact, {\n\t\t\t\tcreateElement: React.createElement,\n\t\t\t})\n\t\t\t.processSync(`<i>${replaced}<i>`);\n\t\treturn <>{processed.result.props.children}</>;\n\t};\n\tconst formatProject = (project) => {\n\t\tconst result = { ...project };\n\t\tresult.name = boldQuery(result.name);\n\t\tresult.summary = boldQuery(result.summary);\n\t\tresult.technologies.sort((a, b) => a.name.localeCompare(b.name));\n\t\tresult.technologies = result.technologies.map((tech) => {\n\t\t\treturn {\n\t\t\t\t...tech,\n\t\t\t\tlabel: boldQuery(tech.name),\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t};\n\tconst filteredProjects = () => {\n\t\tconst projects = allContentfulProject.nodes;\n\t\tlet filtered = [];\n\t\tif (category === 'all') {\n\t\t\tprojects.forEach((project) => {\n\t\t\t\tconst relevance = getRelevance(project);\n\t\t\t\tif (relevance > 0) {\n\t\t\t\t\tfiltered.push({\n\t\t\t\t\t\t...formatProject(project),\n\t\t\t\t\t\trelevance: relevance,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tallContentfulProject.nodes.forEach((project) => {\n\t\t\t\tconst categories = project.category.map((i) => i.slug);\n\t\t\t\tconst relevance = getRelevance(project);\n\t\t\t\tif (categories.includes(category) && relevance > 0) {\n\t\t\t\t\tfiltered.push({\n\t\t\t\t\t\t...formatProject(project),\n\t\t\t\t\t\trelevance: relevance,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tfiltered = filterByStacks(\n\t\t\tfiltered,\n\t\t\tsearchFiltersStacks,\n\t\t\tsearchFiltersTerm === query\n\t\t);\n\t\treturn sortProjects(\n\t\t\tfiltered,\n\t\t\tsearchFiltersSortDir,\n\t\t\tsearchFiltersSortBy\n\t\t);\n\t};\n\tconst getMatch = (term, regex) => {\n\t\tconst match = term.match(regex);\n\t\treturn match ? match.length : 0;\n\t};\n\tconst getRelevance = (project) => {\n\t\tconst terms = query.split(/\\s+/g);\n\t\tconst regex = new RegExp(`(${terms.join('|')})`, 'gi');\n\t\tlet relevance = 0;\n\t\trelevance += getMatch(project.name, regex);\n\t\trelevance += getMatch(project.summary, regex);\n\t\trelevance += listIncludesQueryTerm(project.technologies, regex);\n\t\treturn relevance;\n\t};\n\tconst listIncludesQueryTerm = (list, regex) => {\n\t\tlet count = 0;\n\t\tfor (let i = 0; i < list.length; i++) {\n\t\t\tconst match = getMatch(list[i].name, regex);\n\t\t\tif (match > 0) {\n\t\t\t\tcount += match;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t};\n\tconst projects = filteredProjects();\n\tconst filters = {\n\t\tsortBy: {\n\t\t\tvalue: searchFiltersSortBy,\n\t\t\tupdate: setSearchFiltersSortBy,\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Relevance',\n\t\t\t\t\tvalue: 'relevance',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Project Name',\n\t\t\t\t\tvalue: 'name',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\tsortDir: {\n\t\t\tvalue: searchFiltersSortDir,\n\t\t\tupdate: setSearchFiltersSortDir,\n\t\t\toptions: sortDirOptions,\n\t\t},\n\t\tstacks: {\n\t\t\tinitialized:\n\t\t\t\tsearchFiltersTerm === query && searchFiltersRange === category,\n\t\t\tupdateInitialized: () => {\n\t\t\t\tsetSearchFiltersRange(category);\n\t\t\t\tsetSearchFiltersTerm(query);\n\t\t\t},\n\t\t\tvalue: searchFiltersStacks,\n\t\t\tupdate: setSearchFiltersStacks,\n\t\t\toptions:\n\t\t\t\tsearchFiltersTerm === query\n\t\t\t\t\t? searchFiltersStackOptions\n\t\t\t\t\t: getStacks(projects),\n\t\t},\n\t};\n\tuseEffect(() => {\n\t\tsetSearchFiltersStackOptions(filters.stacks.options);\n\t}, []);\n\treturn (\n\t\t<PaginateProjects\n\t\t\tresults={filteredProjects()}\n\t\t\tbaseUrl={`/search/${category}/${query}`}\n\t\t\tquery={query}\n\t\t\tpage={page}\n\t\t\theading=\"Search\"\n\t\t\ttitle={`Search for \"${query}\" - Page ${page}`}\n\t\t\tdescription={`Page ${page} of search for term \"${query}\" in \"${category}\".`}\n\t\t\tcategory={category === 'all' ? '' : category}\n\t\t\tfilters={filters}\n\t\t/>\n\t);\n};\n\nexport default SearchResults;\n","import React, { useEffect } from 'react';\nimport Results from '../components/Results';\nimport SearchResults from '../components/SearchResults';\nimport NotFound from './404';\nimport { graphql } from 'gatsby';\n\nexport const query = graphql`\n\tquery {\n\t\tallContentfulCategory {\n\t\t\tnodes {\n\t\t\t\tslug\n\t\t\t}\n\t\t}\n\t}\n`;\nconst Search = ({ scrollToTop, params, data }) => {\n\tconst categories = data.allContentfulCategory.nodes.map((i) => i.slug);\n\tconst query = decodeURI(params.query);\n\tuseEffect(() => {\n\t\tscrollToTop();\n\t}, []);\n\tif (['all', ...categories].includes(params.category)) {\n\t\tconst pageParams = params['*'];\n\t\treturn (\n\t\t\t<Results\n\t\t\t\tparams={pageParams}\n\t\t\t\tComponent={({ page }) => (\n\t\t\t\t\t<SearchResults\n\t\t\t\t\t\tcategory={params.category}\n\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\tpage={page}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t} else {\n\t\treturn <NotFound />;\n\t}\n};\n\nexport default Search;\n","export const getStacks = (projects) => {\n    let stackList = {};\n    let stacks = [];\n    projects.forEach((project) => {\n        project.technologies.forEach((tech) => {\n            if (!stackList[tech.name]) {\n                stackList[tech.name] = {\n                    id: tech.contentful_id,\n                    count: 1,\n                };\n            } else {\n                stackList[tech.name].count++;\n            }\n        });\n    });\n    Object.keys(stackList)\n        .sort()\n        .forEach((key) => {\n            stacks.push({\n                label: `${key} (${stackList[key].count})`,\n                value: stackList[key].id,\n            });\n        });\n    return stacks;\n};\nexport const sortDirOptions = [\n    {\n        label: 'Ascending',\n        value: 'ASC',\n    },\n    {\n        label: 'Descending',\n        value: 'DESC',\n    },\n];\nexport const sortProjects = (projects, sortDir, sortBy) => {\n    return projects.sort((a, b) => {\n        switch (sortDir) {\n            case 'ASC':\n                return typeof a[sortBy] === 'string'\n                    ? b[sortBy].localeCompare(a[sortBy])\n                    : b[sortBy] - a[sortBy];\n            case 'DESC':\n            default:\n                return typeof a[sortBy] === 'string'\n                    ? a[sortBy].localeCompare(b[sortBy])\n                    : a[sortBy] - b[sortBy];\n        }\n    });\n};\n\nexport const filterByStacks = (projects, stacks, initialized) => {\n    if (initialized) {\n        return projects.filter((project) => {\n            const projectStacks = project.technologies.map(\n                (i) => i.contentful_id\n            );\n            return containStack(projectStacks, stacks);\n        });\n    } else {\n        return projects;\n    }\n};\nconst containStack = (projectStacks, stacks) => {\n    for (let i = 0; i < stacks.length; i++) {\n        if (projectStacks.includes(stacks[i])) {\n            return true;\n        }\n    }\n    return false;\n};\n"],"names":["pagination","_ref","page","totalPages","baseUrl","className","goToPage","increment","newPage","navigate","styling","styles","React","disabled","onClick","list","length","map","project","key","contentful_id","Link","to","slug","alt","name","PreviewImage","src","previewImage","demo","demoUrl","summary","Technologies","technologies","label","value","options","update","selected","updateSelected","useState","onChange","event","newSelected","target","option","checked","library","add","fas","far","initialized","updateInitialized","hasSelectedAll","selectAll","updateSelectAll","selectValues","forEach","push","useEffect","_toConsumableArray","includes","index","indexOf","splice","CheckBox","_ref2","icon","FontAwesomeIcon","htmlFor","undefined","type","id","onSelectAll","newValue","selectedStacks","query","category","closeModal","filters","search","sortBy","updateSortBy","sortDir","updateSortDir","stacks","updateStacks","sortByFilter","sortDirFilter","stackFilter","updateGlobal","open","FilterSelect","Object","assign","FilterCheckList","onSubmit","show","updateShow","openDialog","Modal","FilterDialog","results","heading","title","description","availablePages","Math","ceil","items","currPageItems","startIndex","slice","Paginate","Pagination","setTitle","setDescription","setSelectedCategory","useContext","GlobalContext","SearchBar","range","FilterButton","Projects","NotFound","params","Component","result","match","parseInt","searchFiltersTerm","setSearchFiltersTerm","searchFiltersRange","setSearchFiltersRange","searchFiltersSortBy","setSearchFiltersSortBy","searchFiltersSortDir","setSearchFiltersSortDir","searchFiltersStacks","setSearchFiltersStacks","searchFiltersStackOptions","setSearchFiltersStackOptions","allContentfulProject","useStaticQuery","boldQuery","str","terms","split","regex","RegExp","join","replaced","replace","x","processed","rehype","data","fragment","use","rehypeSanitize","defaultSchema","rehypeReact","createElement","processSync","props","children","formatProject","sort","a","b","localeCompare","tech","filteredProjects","projects","nodes","filtered","relevance","getRelevance","categories","i","filterByStacks","sortProjects","getMatch","term","listIncludesQueryTerm","count","sortDirOptions","getStacks","PaginateProjects","scrollToTop","allContentfulCategory","decodeURI","concat","pageParams","Results","SearchResults","stackList","keys","filter","projectStacks","containStack"],"sourceRoot":""}