{"version":3,"file":"component---src-pages-search-js-6a0e6fd1431f0de9c736.js","mappings":"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","sources":["webpack://michellemtchai.github.io/./src/components/Pagination.module.scss","webpack://michellemtchai.github.io/./src/components/Pagination.js","webpack://michellemtchai.github.io/./src/components/Projects.js","webpack://michellemtchai.github.io/./src/components/Projects.module.scss","webpack://michellemtchai.github.io/./src/components/FilterSelect.js","webpack://michellemtchai.github.io/./src/components/FilterSelect.module.scss","webpack://michellemtchai.github.io/./src/components/FilterCheckList.module.scss","webpack://michellemtchai.github.io/./src/components/FilterCheckList.js","webpack://michellemtchai.github.io/./src/components/FilterDialog.js","webpack://michellemtchai.github.io/./src/components/FilterDialog.module.scss","webpack://michellemtchai.github.io/./src/components/FilterButton.js","webpack://michellemtchai.github.io/./src/components/FilterButton.module.scss","webpack://michellemtchai.github.io/./src/components/PaginateProjects.js","webpack://michellemtchai.github.io/./src/components/PaginateProjects.module.scss","webpack://michellemtchai.github.io/./src/components/Results.js","webpack://michellemtchai.github.io/./src/components/SearchResults.js","webpack://michellemtchai.github.io/./src/pages/search.js","webpack://michellemtchai.github.io/./src/shared/filter.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var pagination = \"Pagination-module--pagination--220Jl\";\nexport var left = \"Pagination-module--left--1H7uL\";\nexport var right = \"Pagination-module--right--LhP1y\";","import React from 'react';\nimport { navigate } from 'gatsby';\nimport * as styles from './Pagination.module.scss';\n\nconst Pagination = ({ page, totalPages, baseUrl, className }) => {\n\tconst goToPage = (increment) => () => {\n\t\tconst newPage = page + increment;\n\t\tif (newPage > 0 && newPage <= totalPages) {\n\t\t\tnavigate(`${baseUrl}/page/${newPage}`);\n\t\t}\n\t};\n\tconst styling = className\n\t\t? `${className} ${styles.pagination}`\n\t\t: styles.pagination;\n\treturn (\n\t\t<div className={styling}>\n\t\t\t<button\n\t\t\t\tclassName={styles.left}\n\t\t\t\tdisabled={page - 1 <= 0}\n\t\t\t\tonClick={goToPage(-1)}\n\t\t\t>\n\t\t\t\tPrev\n\t\t\t</button>\n\t\t\t<p>Page {page}</p>\n\t\t\t<button\n\t\t\t\tclassName={styles.right}\n\t\t\t\tdisabled={page + 1 > totalPages}\n\t\t\t\tonClick={goToPage(+1)}\n\t\t\t>\n\t\t\t\tNext\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default Pagination;\n","import React from 'react';\nimport Technologies from './Technologies';\nimport { Link } from 'gatsby';\nimport PreviewImage from './PreviewImage';\nimport * as styles from './Projects.module.scss';\n\nconst Projects = ({ list }) => {\n    return (\n        <div className={styles.projects}>\n            {list.length > 0 ? (\n                list.map((project) => (\n                    <section key={project.contentful_id}>\n                        <Link\n                            to={`/projects/${project.slug}`}\n                            alt={project.name}\n                        >\n                            <PreviewImage\n                                className={styles.previewImage}\n                                src={project.previewImage}\n                                alt={project.name}\n                                demo={project.demoUrl}\n                            />\n                            <ul>\n                                <li>\n                                    <h3>{project.name}</h3>\n                                </li>\n                                <li>\n                                    <p>{project.summary}</p>\n                                </li>\n                                <li>\n                                    <Technologies list={project.technologies} />\n                                </li>\n                            </ul>\n                        </Link>\n                    </section>\n                ))\n            ) : (\n                <p className={styles.noProject}>No project found.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Projects;\n","// extracted by mini-css-extract-plugin\nexport var projects = \"Projects-module--projects--1FOFQ\";\nexport var previewImage = \"Projects-module--previewImage--2rAAu\";\nexport var noProject = \"Projects-module--noProject--1S0LZ\";","import React, { useState } from 'react';\nimport * as styles from './FilterSelect.module.scss';\n\nconst FilterSelect = ({ label, value, options, update }) => {\n    const [selected, updateSelected] = useState(value);\n    const onChange = (event) => {\n        const newSelected = event.target.value;\n        updateSelected(newSelected);\n        update(newSelected);\n    };\n    return (\n        <fieldset className={styles.fieldset}>\n            <label>{label}:</label>\n            <select value={selected} onChange={onChange}>\n                {options.map((option) => (\n                    <option key={option.value} value={option.value}>\n                        {option.label}\n                    </option>\n                ))}\n            </select>\n        </fieldset>\n    );\n};\n\nexport default FilterSelect;\n","// extracted by mini-css-extract-plugin\nexport var fieldset = \"FilterSelect-module--fieldset--26Jwr\";","// extracted by mini-css-extract-plugin\nexport var fieldset = \"FilterCheckList-module--fieldset--1hVXb\";\nexport var checked = \"FilterCheckList-module--checked--1DR2a\";\nexport var heading = \"FilterCheckList-module--heading--1ntgf\";\nexport var body = \"FilterCheckList-module--body--2NMHT\";","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport * as styles from './FilterCheckList.module.scss';\nlibrary.add(fas, far);\n\nconst FilterCheckList = ({\n    label,\n    value,\n    options,\n    update,\n    initialized,\n    updateInitialized,\n}) => {\n    const hasSelectedAll = (selected) => {\n        return selected.length === options.length;\n    };\n    const [selectAll, updateSelectAll] = useState(\n        initialized ? hasSelectedAll(value) : true\n    );\n    const selectValues = (selectAll) => {\n        let selected = [];\n        if (selectAll) {\n            options.forEach((option) => {\n                selected.push(option.value);\n            });\n        }\n        return selected;\n    };\n    const [selected, updateSelected] = useState(\n        initialized ? value : selectValues(true)\n    );\n    useEffect(() => {\n        if (!initialized) {\n            updateInitialized(true);\n            update(selectValues(true), true);\n        }\n    }, []);\n    const onSelectAll = () => {\n        const newValue = !selectAll;\n        updateSelectAll(newValue);\n        const selectedStacks = selectValues(newValue);\n        updateSelected(selectedStacks);\n        update(selectedStacks);\n    };\n    const onChange = (event) => {\n        const target = event.target.value;\n        let newSelected = [...selected];\n        if (newSelected.includes(target)) {\n            const index = newSelected.indexOf(target);\n            newSelected.splice(index, 1);\n        } else {\n            newSelected.push(target);\n        }\n        updateSelected(newSelected);\n        update(newSelected);\n        updateSelectAll(hasSelectedAll(newSelected));\n    };\n    const CheckBox = ({ checked }) => {\n        const icon = checked ? ['fas', 'check-square'] : ['far', 'square'];\n        return <FontAwesomeIcon icon={icon} />;\n    };\n    return (\n        <fieldset className={styles.fieldset}>\n            <section className={styles.heading}>\n                <label>{label}:</label>\n                {options.length > 0 && (\n                    <label\n                        htmlFor=\"check-all\"\n                        className={selectAll ? styles.checked : undefined}\n                    >\n                        <input\n                            type=\"checkbox\"\n                            id=\"check-all\"\n                            name=\"check-all\"\n                            value=\"all\"\n                            checked={selectAll}\n                            onChange={onSelectAll}\n                        />\n                        <CheckBox checked={selectAll} />\n                        All\n                    </label>\n                )}\n            </section>\n            <section className={styles.body}>\n                {options.length > 0 ? (\n                    options.map((option) => (\n                        <label\n                            key={option.value}\n                            htmlFor={option.value}\n                            className={\n                                selected.includes(option.value)\n                                    ? styles.checked\n                                    : undefined\n                            }\n                        >\n                            <input\n                                type=\"checkbox\"\n                                id={option.value}\n                                name={option.value}\n                                value={option.value}\n                                checked={selected.includes(option.value)}\n                                onChange={onChange}\n                            />\n                            <CheckBox\n                                checked={selected.includes(option.value)}\n                            />\n                            {option.label}\n                        </label>\n                    ))\n                ) : (\n                    <p>There are no options.</p>\n                )}\n            </section>\n        </fieldset>\n    );\n};\n\nexport default FilterCheckList;\n","import React, { useState } from 'react';\nimport FilterSelect from './FilterSelect';\nimport FilterCheckList from './FilterCheckList';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as styles from './FilterDialog.module.scss';\nimport { navigate } from 'gatsby';\n\nconst FilterDialog = ({ query, category, closeModal, filters, search }) => {\n    const [sortBy, updateSortBy] = useState(filters.sortBy.value);\n    const [sortDir, updateSortDir] = useState(filters.sortDir.value);\n    const [stacks, updateStacks] = useState(filters.stacks.value);\n    const updateStacksGlobal = (stacks, updateGlobal = false) => {\n        updateStacks(stacks);\n        if (updateGlobal) {\n            filters.stacks.update(stacks);\n        }\n    };\n    const sortByFilter = {\n        ...filters.sortBy,\n        value: sortBy,\n        update: updateSortBy,\n    };\n    const sortDirFilter = {\n        ...filters.sortDir,\n        value: sortDir,\n        update: updateSortDir,\n    };\n    const stackFilter = {\n        ...filters.stacks,\n        value: stacks,\n        update: updateStacksGlobal,\n    };\n    const onSubmit = () => {\n        filters.sortBy.update(sortBy);\n        filters.sortDir.update(sortDir);\n        filters.stacks.update(stacks);\n        closeModal();\n        navigate(search ? `/search/${category}/${query}` : `/${category}`);\n    };\n    return (\n        <dialog open className={styles.dialog}>\n            <section className={styles.header}>\n                <h1>\n                    <FontAwesomeIcon icon={['fa', 'sliders-h']} />\n                    Filter Dialog\n                </h1>\n                <button onClick={closeModal}>&times;</button>\n            </section>\n            <section className={styles.body}>\n                <FilterSelect label=\"Sort By\" {...sortByFilter} />\n                <FilterSelect label=\"Sort Direction\" {...sortDirFilter} />\n                <FilterCheckList label=\"Stacks\" {...stackFilter} />\n            </section>\n            <section className={styles.footer}>\n                <button className={styles.cancel} onClick={closeModal}>\n                    Cancel\n                </button>\n                <button className={styles.submit} onClick={onSubmit}>\n                    Filter\n                </button>\n            </section>\n        </dialog>\n    );\n};\n\nexport default FilterDialog;\n","// extracted by mini-css-extract-plugin\nexport var dialog = \"FilterDialog-module--dialog--1ndge\";\nexport var header = \"FilterDialog-module--header--2LjUN\";\nexport var body = \"FilterDialog-module--body--27zhW\";\nexport var footer = \"FilterDialog-module--footer--1TVr_\";\nexport var cancel = \"FilterDialog-module--cancel--2G1hC\";\nexport var submit = \"FilterDialog-module--submit--3knQp\";","import React, { useState } from 'react';\nimport Modal from './Modal';\nimport FilterDialog from './FilterDialog';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as styles from './FilterButton.module.scss';\n\nconst FilterButton = ({ category, query, filters, search }) => {\n    const [show, updateShow] = useState(false);\n    const openDialog = () => {\n        updateShow(true);\n    };\n    return (\n        <>\n            <button className={styles.filterButton} onClick={openDialog}>\n                <FontAwesomeIcon icon={['fa', 'sliders-h']} />\n                Filter\n            </button>\n            <Modal show={show} updateShow={updateShow}>\n                <FilterDialog\n                    query={query}\n                    category={category}\n                    closeModal={() => updateShow(false)}\n                    filters={filters}\n                    search={search}\n                />\n            </Modal>\n        </>\n    );\n};\n\nexport default FilterButton;\n","// extracted by mini-css-extract-plugin\nexport var filterButton = \"FilterButton-module--filterButton--2_3A8\";","import React, { useEffect, useContext } from 'react';\nimport SearchBar from './SearchBar';\nimport Pagination from './Pagination';\nimport Projects from './Projects';\nimport FilterButton from './FilterButton';\nimport NotFound from '../pages/404';\nimport { GlobalContext } from '../../GlobalContext.js';\nimport * as styles from './PaginateProjects.module.scss';\n\nconst ITEMS_PER_PAGE = 10;\n\nconst PaginateProjects = ({\n\tresults,\n\tfilters,\n\tbaseUrl,\n\tquery,\n\tpage,\n\theading,\n\ttitle,\n\tdescription,\n\tcategory,\n}) => {\n\tlet availablePages = Math.ceil(results.length / ITEMS_PER_PAGE);\n\tavailablePages = availablePages === 0 ? 1 : availablePages;\n\tconst currPageItems = () => {\n\t\tconst startIndex = (page - 1) * ITEMS_PER_PAGE;\n\t\treturn results.slice(startIndex, startIndex + ITEMS_PER_PAGE);\n\t};\n\tconst items = currPageItems();\n\tconst Paginate = ({ className }) =>\n\t\tavailablePages > 1 && (\n\t\t\t<Pagination\n\t\t\t\tpage={page}\n\t\t\t\ttotalPages={availablePages}\n\t\t\t\tbaseUrl={baseUrl}\n\t\t\t\tclassName={className}\n\t\t\t/>\n\t\t);\n\tconst { setTitle, setDescription, setSelectedCategory } =\n\t\tuseContext(GlobalContext);\n\tuseEffect(() => {\n\t\tsetTitle(title);\n\t\tsetDescription(description);\n\t\tsetSelectedCategory(category);\n\t}, []);\n\treturn page > 0 && page <= availablePages ? (\n\t\t<>\n\t\t\t<SearchBar range={category === '' ? 'all' : category} />\n\t\t\t<h2 className={styles.heading}>{heading}</h2>\n\t\t\t<section className={styles.topInfo}>\n\t\t\t\t<FilterButton\n\t\t\t\t\tquery={query}\n\t\t\t\t\tcategory={category === '' ? 'all' : category}\n\t\t\t\t\tfilters={filters}\n\t\t\t\t\tsearch={heading === 'Search'}\n\t\t\t\t/>\n\t\t\t\t<p className={styles.summary}>\n\t\t\t\t\t{availablePages > 1 && `${items.length} of `}\n\t\t\t\t\t{results.length} Project{items.length > 1 && 's'}\n\t\t\t\t\t{query && ` for \"${query}\"`}\n\t\t\t\t</p>\n\t\t\t\t<Paginate className={styles.paginate} />\n\t\t\t</section>\n\t\t\t<Projects list={items} />\n\t\t\t<Paginate className={styles.bottomPagination} />\n\t\t</>\n\t) : (\n\t\t<NotFound />\n\t);\n};\n\nexport default PaginateProjects;\n","// extracted by mini-css-extract-plugin\nexport var topInfo = \"PaginateProjects-module--topInfo--19Sgu\";\nexport var summary = \"PaginateProjects-module--summary--n_Ksx\";\nexport var heading = \"PaginateProjects-module--heading--2N9Cf\";\nexport var bottomPagination = \"PaginateProjects-module--bottomPagination--yCPJt\";\nexport var paginate = \"PaginateProjects-module--paginate--3smcm\";","import React from 'react';\nimport NotFound from '../pages/404';\n\nconst Results = ({ params, Component }) => {\n\tif (params) {\n\t\tconst result = params.match(/^page\\/(\\d+)$/);\n\t\tif (result && result.length === 2) {\n\t\t\tconst page = parseInt(result[1]);\n\t\t\treturn <Component page={page} />;\n\t\t} else {\n\t\t\treturn <NotFound />;\n\t\t}\n\t} else {\n\t\treturn <Component page={1} />;\n\t}\n};\n\nexport default Results;\n","import React, { useEffect, useContext } from 'react';\nimport PaginateProjects from './PaginateProjects';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport {\n\tfilterByStacks,\n\tgetStacks,\n\tsortDirOptions,\n\tsortProjects,\n} from '../shared/filter';\nimport { GlobalContext } from '../../GlobalContext.js';\nimport { rehype } from 'rehype';\nimport rehypeSanitize, { defaultSchema } from 'rehype-sanitize';\nimport rehypeReact from 'rehype-react';\n\nconst SearchResults = ({ category, query, page }) => {\n\tconst {\n\t\tsearchFiltersTerm,\n\t\tsetSearchFiltersTerm,\n\t\tsearchFiltersRange,\n\t\tsetSearchFiltersRange,\n\t\tsearchFiltersSortBy,\n\t\tsetSearchFiltersSortBy,\n\t\tsearchFiltersSortDir,\n\t\tsetSearchFiltersSortDir,\n\t\tsearchFiltersStacks,\n\t\tsetSearchFiltersStacks,\n\t\tsearchFiltersStackOptions,\n\t\tsetSearchFiltersStackOptions,\n\t} = useContext(GlobalContext);\n\tconst { allContentfulProject } = useStaticQuery(\n\t\tgraphql`\n\t\t\tquery {\n\t\t\t\tallContentfulProject {\n\t\t\t\t\tnodes {\n\t\t\t\t\t\tcontentful_id\n\t\t\t\t\t\tslug\n\t\t\t\t\t\tname\n\t\t\t\t\t\tsummary\n\t\t\t\t\t\tdemoUrl\n\t\t\t\t\t\tpreviewImage {\n\t\t\t\t\t\t\tgatsbyImageData(\n\t\t\t\t\t\t\t\twidth: 320\n\t\t\t\t\t\t\t\tplaceholder: BLURRED\n\t\t\t\t\t\t\t\tformats: [AUTO, WEBP]\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttechnologies {\n\t\t\t\t\t\t\tcontentful_id\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\ticon {\n\t\t\t\t\t\t\t\tgatsbyImageData(\n\t\t\t\t\t\t\t\t\twidth: 12\n\t\t\t\t\t\t\t\t\tplaceholder: BLURRED\n\t\t\t\t\t\t\t\t\tformats: [AUTO, WEBP]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcategory {\n\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`\n\t);\n\tconst boldQuery = (str) => {\n\t\tconst terms = query.split(/\\s+/g);\n\t\tconst regex = new RegExp(`(${terms.join('|')})`, 'gi');\n\t\tconst replacer = (x) => `<b>${x}</b>`;\n\t\tconst replaced = str.replace(regex, replacer);\n\t\tconst processed = rehype()\n\t\t\t.data('settings', { fragment: true })\n\t\t\t.use(rehypeSanitize, defaultSchema)\n\t\t\t.use(rehypeReact, {\n\t\t\t\tcreateElement: React.createElement,\n\t\t\t})\n\t\t\t.processSync(`<i>${replaced}<i>`);\n\t\treturn <>{processed.result.props.children}</>;\n\t};\n\tconst formatProject = (project) => {\n\t\tconst result = { ...project };\n\t\tresult.name = boldQuery(result.name);\n\t\tresult.summary = boldQuery(result.summary);\n\t\tresult.technologies.sort((a, b) => a.name.localeCompare(b.name));\n\t\tresult.technologies = result.technologies.map((tech) => {\n\t\t\treturn {\n\t\t\t\t...tech,\n\t\t\t\tlabel: boldQuery(tech.name),\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t};\n\tconst filteredProjects = () => {\n\t\tconst projects = allContentfulProject.nodes;\n\t\tlet filtered = [];\n\t\tif (category === 'all') {\n\t\t\tprojects.forEach((project) => {\n\t\t\t\tconst relevance = getRelevance(project);\n\t\t\t\tif (relevance > 0) {\n\t\t\t\t\tfiltered.push({\n\t\t\t\t\t\t...formatProject(project),\n\t\t\t\t\t\trelevance: relevance,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tallContentfulProject.nodes.forEach((project) => {\n\t\t\t\tconst categories = project.category.map((i) => i.slug);\n\t\t\t\tconst relevance = getRelevance(project);\n\t\t\t\tif (categories.includes(category) && relevance > 0) {\n\t\t\t\t\tfiltered.push({\n\t\t\t\t\t\t...formatProject(project),\n\t\t\t\t\t\trelevance: relevance,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tfiltered = filterByStacks(\n\t\t\tfiltered,\n\t\t\tsearchFiltersStacks,\n\t\t\tsearchFiltersTerm === query\n\t\t);\n\t\treturn sortProjects(\n\t\t\tfiltered,\n\t\t\tsearchFiltersSortDir,\n\t\t\tsearchFiltersSortBy\n\t\t);\n\t};\n\tconst getMatch = (term, regex) => {\n\t\tconst match = term.match(regex);\n\t\treturn match ? match.length : 0;\n\t};\n\tconst getRelevance = (project) => {\n\t\tconst terms = query.split(/\\s+/g);\n\t\tconst regex = new RegExp(`(${terms.join('|')})`, 'gi');\n\t\tlet relevance = 0;\n\t\trelevance += getMatch(project.name, regex);\n\t\trelevance += getMatch(project.summary, regex);\n\t\trelevance += listIncludesQueryTerm(project.technologies, regex);\n\t\treturn relevance;\n\t};\n\tconst listIncludesQueryTerm = (list, regex) => {\n\t\tlet count = 0;\n\t\tfor (let i = 0; i < list.length; i++) {\n\t\t\tconst match = getMatch(list[i].name, regex);\n\t\t\tif (match > 0) {\n\t\t\t\tcount += match;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t};\n\tconst projects = filteredProjects();\n\tconst filters = {\n\t\tsortBy: {\n\t\t\tvalue: searchFiltersSortBy,\n\t\t\tupdate: setSearchFiltersSortBy,\n\t\t\toptions: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Relevance',\n\t\t\t\t\tvalue: 'relevance',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Project Name',\n\t\t\t\t\tvalue: 'name',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\tsortDir: {\n\t\t\tvalue: searchFiltersSortDir,\n\t\t\tupdate: setSearchFiltersSortDir,\n\t\t\toptions: sortDirOptions,\n\t\t},\n\t\tstacks: {\n\t\t\tinitialized:\n\t\t\t\tsearchFiltersTerm === query && searchFiltersRange === category,\n\t\t\tupdateInitialized: () => {\n\t\t\t\tsetSearchFiltersRange(category);\n\t\t\t\tsetSearchFiltersTerm(query);\n\t\t\t},\n\t\t\tvalue: searchFiltersStacks,\n\t\t\tupdate: setSearchFiltersStacks,\n\t\t\toptions:\n\t\t\t\tsearchFiltersTerm === query\n\t\t\t\t\t? searchFiltersStackOptions\n\t\t\t\t\t: getStacks(projects),\n\t\t},\n\t};\n\tuseEffect(() => {\n\t\tsetSearchFiltersStackOptions(filters.stacks.options);\n\t}, []);\n\treturn (\n\t\t<PaginateProjects\n\t\t\tresults={filteredProjects()}\n\t\t\tbaseUrl={`/search/${category}/${query}`}\n\t\t\tquery={query}\n\t\t\tpage={page}\n\t\t\theading=\"Search\"\n\t\t\ttitle={`Search for \"${query}\" - Page ${page}`}\n\t\t\tdescription={`Page ${page} of search for term \"${query}\" in \"${category}\".`}\n\t\t\tcategory={category === 'all' ? '' : category}\n\t\t\tfilters={filters}\n\t\t/>\n\t);\n};\n\nexport default SearchResults;\n","import React from 'react';\nimport Results from '../components/Results';\nimport SearchResults from '../components/SearchResults';\nimport NotFound from './404';\nimport { graphql } from 'gatsby';\n\nexport const query = graphql`\n\tquery {\n\t\tallContentfulCategory {\n\t\t\tnodes {\n\t\t\t\tslug\n\t\t\t}\n\t\t}\n\t}\n`;\nconst Search = ({ params, data }) => {\n\tconst categories = data.allContentfulCategory.nodes.map((i) => i.slug);\n\tconst query = decodeURI(params.query);\n\tif (['all', ...categories].includes(params.category)) {\n\t\tconst pageParams = params['*'];\n\t\treturn (\n\t\t\t<Results\n\t\t\t\tparams={pageParams}\n\t\t\t\tComponent={({ page }) => (\n\t\t\t\t\t<SearchResults\n\t\t\t\t\t\tcategory={params.category}\n\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\tpage={page}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t} else {\n\t\treturn <NotFound />;\n\t}\n};\n\nexport default Search;\n","export const getStacks = (projects) => {\n    let stackList = {};\n    let stacks = [];\n    projects.forEach((project) => {\n        project.technologies.forEach((tech) => {\n            if (!stackList[tech.name]) {\n                stackList[tech.name] = {\n                    id: tech.contentful_id,\n                    count: 1,\n                };\n            } else {\n                stackList[tech.name].count++;\n            }\n        });\n    });\n    Object.keys(stackList)\n        .sort()\n        .forEach((key) => {\n            stacks.push({\n                label: `${key} (${stackList[key].count})`,\n                value: stackList[key].id,\n            });\n        });\n    return stacks;\n};\nexport const sortDirOptions = [\n    {\n        label: 'Ascending',\n        value: 'ASC',\n    },\n    {\n        label: 'Descending',\n        value: 'DESC',\n    },\n];\nexport const sortProjects = (projects, sortDir, sortBy) => {\n    return projects.sort((a, b) => {\n        switch (sortDir) {\n            case 'ASC':\n                return typeof a[sortBy] === 'string'\n                    ? b[sortBy].localeCompare(a[sortBy])\n                    : b[sortBy] - a[sortBy];\n            case 'DESC':\n            default:\n                return typeof a[sortBy] === 'string'\n                    ? a[sortBy].localeCompare(b[sortBy])\n                    : a[sortBy] - b[sortBy];\n        }\n    });\n};\n\nexport const filterByStacks = (projects, stacks, initialized) => {\n    if (initialized) {\n        return projects.filter((project) => {\n            const projectStacks = project.technologies.map(\n                (i) => i.contentful_id\n            );\n            return containStack(projectStacks, stacks);\n        });\n    } else {\n        return projects;\n    }\n};\nconst containStack = (projectStacks, stacks) => {\n    for (let i = 0; i < stacks.length; i++) {\n        if (projectStacks.includes(stacks[i])) {\n            return true;\n        }\n    }\n    return false;\n};\n"],"names":["pagination","page","totalPages","baseUrl","className","goToPage","increment","newPage","navigate","styling","styles","disabled","onClick","list","length","map","project","key","contentful_id","to","slug","alt","name","PreviewImage","src","previewImage","demo","demoUrl","summary","Technologies","technologies","label","value","options","update","useState","selected","updateSelected","onChange","event","newSelected","target","option","checked","library","fas","far","initialized","updateInitialized","hasSelectedAll","selectAll","updateSelectAll","selectValues","forEach","push","useEffect","includes","index","indexOf","splice","CheckBox","icon","htmlFor","undefined","type","id","newValue","selectedStacks","query","category","closeModal","filters","search","sortBy","updateSortBy","sortDir","updateSortDir","stacks","updateStacks","sortByFilter","sortDirFilter","stackFilter","updateGlobal","open","show","updateShow","Modal","results","heading","title","description","availablePages","Math","ceil","startIndex","items","slice","Paginate","useContext","GlobalContext","setTitle","setDescription","setSelectedCategory","SearchBar","range","params","Component","result","match","parseInt","searchFiltersTerm","setSearchFiltersTerm","searchFiltersRange","setSearchFiltersRange","searchFiltersSortBy","setSearchFiltersSortBy","searchFiltersSortDir","setSearchFiltersSortDir","searchFiltersStacks","setSearchFiltersStacks","searchFiltersStackOptions","setSearchFiltersStackOptions","allContentfulProject","useStaticQuery","boldQuery","str","terms","split","regex","RegExp","join","replaced","replace","x","processed","rehype","data","fragment","use","rehypeSanitize","defaultSchema","rehypeReact","createElement","React","processSync","props","children","formatProject","sort","a","b","localeCompare","tech","filteredProjects","projects","nodes","filtered","relevance","getRelevance","categories","i","filterByStacks","sortProjects","getMatch","term","listIncludesQueryTerm","count","sortDirOptions","getStacks","PaginateProjects","allContentfulCategory","decodeURI","pageParams","Results","stackList","Object","keys","filter","projectStacks","containStack"],"sourceRoot":""}